# Даны два неупорядоченных набора целых чисел (может быть, с повторениями). 
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n — кол-во элементов первого множества. m — кол-во элементов 
# второго множества. Затем пользователь вводит сами элементы множеств.
#_____________________________________________________________________
# a=int(input("кол-во элементов первого набора чисел: "))
# b=int(input("кол-во элементов второго набора чисел: "))
# print("введите значения первого списка: ")
# i=0
# list_1=[]
# while i<a:
#     list_1.append(int(input()))
#     i+=1
# print("введите значения второго списка: ")
# j=0
# list_2=[]
# while j<b:
#     list_2.append(int(input()))
#     j+=1
# print(list_1)
# print(list_2)
# mnoj_1=set(list_1)
# mnoj_2=set(list_2)
# result=mnoj_1.intersection(mnoj_2)
# print(result)

#________________________________________________________________-
# В фермерском хозяйстве в Карелии выращивают чернику. Она растёт на круглой грядке, причём кусты высажены только по окружности. 
# Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растёт N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод — на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники. Эта система состоит из управляющего модуля и нескольких 
# собирающих модулей. Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль, находясь перед 
# некоторым кустом заданной во входном файле грядки.

# 3 1 2 4

n=int(input("введите колличество кустов: "))
i=0
list_1=[]
while i<n:
    list_1.append(int(input()))
    i+=1
print(*list_1)
list_2=[]
for i in range(len(list_1)):
    list_2.append(list_1[i-2]+list_1[i-1]+ list_1[i])
print(max(list_2))